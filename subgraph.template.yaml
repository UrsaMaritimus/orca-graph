specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: AVAI
    network: {{network}}
    source:
      address: '{{avai}}'
      abi: AVAI
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Bank
        - Stablecoin
        - Token
        - User
        - TokenPrice
      abis:
        - name: AVAI
          file: ./abis/AVAI.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Chainlink
          file: ./abis/Chainlink.json
      eventHandlers:
        - event: CreateVaultType(address,uint256,address,string,address)
          handler: handleCreateVaultType
        - event: Paused(address)
          handler: handlePaused
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/avai.ts
  - kind: ethereum/contract
    name: Exchange
    network: {{network}}
    source:
      address: '{{exchange}}'
      abi: Exchange
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Bank
        - Stablecoin
        - Token
        - User
        - TokenPrice
      abis:
        - name: AVAI
          file: ./abis/AVAI.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Chainlink
          file: ./abis/Chainlink.json
        - name: Exchange
          file: ./abis/Exchange.json
      eventHandlers:
        - event: Mint(address,uint256,uint256)
          handler: handleMint
        - event: Redeem(address,uint256,uint256)
          handler: handleRedeem
      file: ./src/exchange.ts
  - kind: ethereum/contract
    name: PodLeader
    network: {{network}}
    source:
      address: '{{podleader}}'
      abi: PodLeader
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - PodLeader
      abis:
        - name: PodLeader
          file: ./abis/PodLeader.json
      eventHandlers:
        - event: ChangedRewardsEndTimestamp(indexed uint256,indexed uint256)
          handler: handleChangedRewardsEndTimestamp
        - event: ChangedRewardsPerSecond(indexed uint256,indexed uint256)
          handler: handleChangedRewardsPerSecond
        - event: ChangedTreasury(indexed address,indexed address)
          handler: handleChangedTreasury
        - event: Deposit(indexed address,indexed uint256,uint256,uint256)
          handler: handleDeposit
        - event: DepositFeeUpdated(indexed uint256,uint16,uint16)
          handler: handleFeeUpdated
        - event: EmergencyWithdraw(indexed address,indexed uint256,uint256)
          handler: handleEmergencyWithdraw
        - event: PoolAdded(indexed uint256,indexed address,uint256,uint256,uint256,uint16)
          handler: handlePoolAdded
        - event: PoolUpdated(indexed uint256,uint256,uint256,uint256)
          handler: handlePoolUpdated
        - event: SetRewardsStartTimestamp(indexed uint256)
          handler: handleSetRewardsStartTimestamp
        - event: Withdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdraw
      file: ./src/podLeader.ts
  - kind: ethereum/contract
    name: Orca
    network: {{network}}
    source:
      address: '{{orca}}'
      abi: Orca
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Orca
      abis:
        - name: Orca
          file: ./abis/Orca.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/orca.ts
  - kind: ethereum/contract
    name: OrcaStaking
    network: {{network}}
    source:
      address: '{{orcaStaking}}'
      abi: OrcaStaking
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - OrcaStaking
      abis:
        - name: OrcaStaking
          file: ./abis/OrcaStaking.json
      eventHandlers:
        - event: ChangedRewardsEndTimestamp(indexed uint256,indexed uint256)
          handler: handleChangedRewardsEndTimestamp
        - event: ChangedRewardsPerSecond(indexed uint256,indexed uint256)
          handler: handleChangedRewardsPerSecond
        - event: Deposit(indexed address,indexed uint256,uint256)
          handler: handleDeposit
        - event: EmergencyWithdraw(indexed address,indexed uint256,uint256)
          handler: handleEmergencyWithdraw
        - event: PoolAdded(indexed uint256,indexed address,uint256,uint256,uint256)
          handler: handlePoolAdded
        - event: PoolUpdated(indexed uint256,uint256,uint256,uint256)
          handler: handlePoolUpdated
        - event: SetRewardsStartTimestamp(indexed uint256)
          handler: handleSetRewardsStartTimestamp
        - event: Withdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdraw
      file: ./src/orcaStaking.ts
  - kind: ethereum/contract
    name: StormStaking
    network: {{network}}
    source:
      address: '{{storm}}'
      abi: SingleStaking
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - SingleStaking
      abis:
        - name: SingleStaking
          file: ./abis/SingleStaking.json
      eventHandlers:
        - event: ChangedRewardsEndTimestamp(indexed uint256,indexed uint256)
          handler: handleChangedRewardsEndTimestamp
        - event: ChangedRewardsPerSecond(indexed uint256,indexed uint256)
          handler: handleChangedRewardsPerSecond
        - event: Deposit(indexed address,indexed uint256,uint256)
          handler: handleDeposit
        - event: EmergencyWithdraw(indexed address,indexed uint256,uint256)
          handler: handleEmergencyWithdraw
        - event: PoolAdded(indexed uint256,indexed address,uint256,uint256,uint256)
          handler: handlePoolAdded
        - event: PoolUpdated(indexed uint256,uint256,uint256,uint256)
          handler: handlePoolUpdated
        - event: SetRewardsStartTimestamp(indexed uint256)
          handler: handleSetRewardsStartTimestamp
        - event: Withdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdraw
      file: ./src/singleStaking.ts
  - kind: ethereum/contract
    name: OrcaPod
    network: {{network}}
    source:
      address: '{{pod}}'
      abi: OrcaPod
      startBlock: {{startblock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Pod
        - User
      abis:
        - name: OrcaPod
          file: ./abis/OrcaPod.json
        - name: Orca
          file: ./abis/Orca.json
        - name: Pair
          file: ./abis/Pair.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: transfer
      file: ./src/orcaPod.ts


templates:
  - name: Bank
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Bank
    mapping:
      abis:
        - name: Bank
          file: ./abis/Bank.json
        - name: Chainlink
          file: ./abis/Chainlink.json
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/bank.ts
      entities:
        - Bank
        - Stablecoin
        - Token
        - User
        - TokenPrice
      eventHandlers:
        - event: CreateVault(uint256,address)
          handler: handleCreateVault
        - event: DestroyVault(uint256)
          handler: handleDestroyVault
        - event: TransferVault(uint256,address,address)
          handler: handleTransferVault
        - event: LiquidateVault(uint256,address,address,uint256,uint256,uint256)
          handler: handleLiquidateVaults
        - event: DepositCollateral(uint256,uint256)
          handler: handleDepositCollateral
        - event: WithdrawCollateral(uint256,uint256)
          handler: handleWithdrawCollateral
        - event: BorrowToken(uint256,uint256)
          handler: handleBorrowToken
        - event: PayBackToken(uint256,uint256,uint256)
          handler: handlePayBackToken
        - event: GetPaid(uint256,address)
          handler: handleGetPaid
        - event: NewDebtCeiling(uint256)
          handler: handleNewDebtCeiling
        - event: NewClosingFee(uint256)
          handler: handleNewClosingFee
